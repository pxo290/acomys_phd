#!/bin/bash -Ee
#SBATCH -t 00-12:30
#SBATCH -p ei-medium
#SBATCH -c 2
#SBATCH --array=1-348%10
#SBATCH --mem=128gb
#SBATCH --mail-type=begin,end,fail
#SBATCH --mail-user=peter.osborne@earlham.ac.uk
#SBATCH -o /ei/.project-scratch/c/c33dfa31-8d66-4727-827b-ce9eb62d3237/2022-02-12_Paper_2-Chapter_2_Actual_taxonomy_and_function_as_well_as_mapping/strictest_bins/slurm_outputs/2023-02-12_Prokka_on_strict_bins-ARRAY-%A.out
#SBATCH -e /ei/.project-scratch/c/c33dfa31-8d66-4727-827b-ce9eb62d3237/2022-02-12_Paper_2-Chapter_2_Actual_taxonomy_and_function_as_well_as_mapping/strictest_bins/slurm_outputs/2023-02-12_Prokka_on_strict_bins-ARRAY-%A.err

#Written on 2023-02-12
#Written by Peter Osborne

#This is an array script which will run Prokka on all 348 'strict' (contamination 5% or less, completeness 80% or more) bin fasta files. The bins were
#generated by Chris Q. and Seb R.. They have been previosly analysed with DFAST-core but I find the output of that to be not very user friendly so will
#use Prokka on them now. The function is taken from a prior script of mine.

#Written to be run on the NBI HPC
#Script can be found at: /hpc-home/osbourne/Post-EI_scripts/2023-02-12_Prokka_on_strict_bins-ARRAY.sh

#Failure catch function
failure_catch() {
  local lineno=$1
  local msg=$2
  printf "\nFailed at:\t$lineno\t$msg\n"
}
trap 'failure_catch ${LINENO} "$BASH_COMMAND"' ERR

#Setting fixed variables
export isolates_dir="/ei/projects/b/b881ad24-2c3c-4508-a6b2-b1c552453c24/culture_isolates/assemblies/all_contig_assemblies_contigs_under_500_bp_removed/assemblies_bins_iMGMC_MAGs_and_some_references/bbmasked_fasta_files"
export top_outdir="${isolates_dir}/Prokka_outdir"
export array_files_list="${isolates_dir}/list_basenames_all_strict_bins.txt"

#Sourcing Prokka
source package 4e99f6f0-3ba1-4757-9962-ba3faa24d885 #Prokka 1.14.6

#Defining Prokka function
execute_prokka () {
    bin_file="$1"
    bin_name=$(printf "$bin_file" | awk -F ".BBMasked.fa" '{print $1}')
    topoutdir="$2"
    mkdir -m 755 -p "${topoutdir}/${bin_name}-Prokka_output"
    outdir="${topoutdir}/${bin_name}-Prokka_output"
    printf "Will run Prokka on input file:\t$bin_file\nOutput will be written to:\t$outdir\n"
    prokka --outdir "$outdir" --force --prefix "$bin_name" --kingdom Bacteria "$bin_file"
    printf "Ran Prokka on input file:\t$bin_file\nOutput should be written in:\t$outdir\n"
}

#Exporting the Prokka function
export -f execute_prokka

#Going to the input directory
cd "$bins_inpdir"

#Doing the array stuff
inpf=$(sed -n "$SLURM_ARRAY_TASK_ID"p "$array_files_list")

#Running the function
execute_prokka "$inpf" "$top_outdir"
