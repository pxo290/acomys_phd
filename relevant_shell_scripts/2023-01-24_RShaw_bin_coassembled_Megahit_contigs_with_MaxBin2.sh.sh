#!/bin/bash -eE
#SBATCH -t 2-12:30
#SBATCH -p ei-medium
#SBATCH -c 2
#SBATCH -J 2023-01-24_RShaw_bin_coassembled_Megahit_contigs_with_MaxBin2
#SBATCH --mem=64gb
#SBATCH --mail-type=begin,end,fail
#SBATCH --mail-user=peter.osborne@earlham.ac.uk
#SBATCH -o /ei/projects/5/5306b670-79f8-438b-aa06-d6133e2c53a4/2022-04-05_Extra_or_side_stuff/RS_experimenting/slurm_outputs/2023-01-24_RShaw_bin_coassembled_Megahit_contigs_with_MaxBin2-%A.out
#SBATCH -e /ei/projects/5/5306b670-79f8-438b-aa06-d6133e2c53a4/2022-04-05_Extra_or_side_stuff/RS_experimenting/slurm_outputs/2023-01-24_RShaw_bin_coassembled_Megahit_contigs_with_MaxBin2-%A.err

#Script written by Peter Osborne - post EI studentship
#Written on 2023-01-24

#This is a quick and ugly script meant to run MaxBin2 on an assembly generated by coassembling many read files together. The assembly was produced by
#Megahit. I am using MaxBin2 here as I cannot at the time of writing think of how I would use Metabat given that the assembly was produced from multiple
#read files and so cannot just have the reads mapped to it, as Metabat requires. Hopefully MaxBin2 will be alright with just the assembly and a list of
#the paths to all the read files used in producing it.

#Script can be found at: /ei/projects/5/5306b670-79f8-438b-aa06-d6133e2c53a4/2022-04-05_Extra_or_side_stuff/RS_experimenting/scripts/2023-01-24_RShaw_bin_coassembled_Megahit_contigs_with_MaxBin2.sh

#This script is written to be run on the NBI HPC

#Failure catch function
failure_catch() {
  local lineno=$1
  local msg=$2
  printf "\nFailed at:\t$lineno\t$msg\n"
}
trap 'failure_catch ${LINENO} "$BASH_COMMAND"' ERR

#Setting fixed variables
export docker_image_dir="/ei/projects/5/5306b670-79f8-438b-aa06-d6133e2c53a4/2022-04-05_Extra_or_side_stuff/RS_experimenting/Docker_images"
export maxbin2_image="${docker_image_dir}/maxbin2_v2_2_7_docker_image.img" #Maxbin2 v.2.2.7
export megahit_inpdir="/ei/projects/5/5306b670-79f8-438b-aa06-d6133e2c53a4/2022-04-05_Extra_or_side_stuff/RS_experimenting/e7199858_b7f4_4319_b735_fae760f50479_HwrGl6_Coassembly_run-MEGAHIT_outputs/Megahit"
export megahit_assembly="${megahit_inpdir}/e7199858_b7f4_4319_b735_fae760f50479_HwrGl6_Coassembly_run.Megahit_output.contigs.fa"
export reads_dir="/ei/projects/5/5306b670-79f8-438b-aa06-d6133e2c53a4/2022-04-05_Extra_or_side_stuff/RS_experimenting/RShaw_cleansed_reads_all_samples"
export reads_file_list="${reads_dir}/2023_01_24-list_absolute_paths_all_RShaw_read_files.txt"
export top_outdir="/ei/projects/5/5306b670-79f8-438b-aa06-d6133e2c53a4/2022-04-05_Extra_or_side_stuff/RS_experimenting"
export run_ID="e7199858_b7f4_4319_b735_fae760f50479_HwrGl6_Coassembly_run"

#Writing Maxbin2 binning function
execute_maxbin2_binning () {
    maxbin_image="$1"
    mkdir -m 755 -p "${top_outdir}/Maxbin_output/${run_ID}-MaxBin2"
    export maxbin2_outdir="${top_outdir}/Maxbin_output/${run_ID}-MaxBin2"
    reads_list="$2"
    assembly_file="$3"
    printf "Will use Megahit assembly file:\t$assembly_file along with the read files found in this list text file:\t$reads_list to bin the assembly using Maxbin2.\nOutput should be found in this directory:\t$maxbin2_outdir\n"
    singularity exec "$maxbin_image" run_MaxBin.pl -contig "$assembly_file" -out "${maxbin2_outdir}/Maxbin2_output" -reads_list "$reads_list" -verbose -min_contig_length 500
    printf "Should have finished Maxbin2 execution\n"
}

#Exporting the function
export -f execute_maxbin2_binning

#Going to the top output directory
cd "$top_outdir"

#Running the function
execute_maxbin2_binning "$maxbin2_image" "$reads_file_list" "$megahit_assembly"